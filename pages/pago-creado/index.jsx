import Link from 'next/link'
import Head from 'next/head'
import axios from 'axios'
import { useState, useEffect } from 'react'
import QRCode from 'react-qr-code'

import Header from '../../components/Header.jsx'


import * as Icon from 'react-cryptocoins';



export default function PagoCreado() {
	// const [userLogged, setUserLogged] = useState(null)
	// const [amount, setAmount] = useState(0)
	// const [currency, setCurrency] = useState(null)
	const [payment, setPayment] = useState(null)
	const [paymentSelected, setPaymentSelected] = useState(null)

	useEffect(() => {
		if (localStorage.getItem('lastPaymentMade')) {
			setPayment(JSON.parse(localStorage.getItem('lastPaymentMade')))
		}
	}, [])

	// const fetchData = async () => {
	//     const dataCharge = {
	//         amount: amount.toString(),
	//         currency,
	//         description,
	//         customer_name: userLogged.name,
	//         customer_id: userLogged._id
	//     }
	//     axios.get('/api/charges', {params: dataCharge})
	//         .then(res =>{
	//             console.log(res)
	//         })
	//         .catch(err =>{
	//             console.log(err)
	//         })

	// };

	const handlePaymentSelected = (
		paymentSelectedName,
		paymentSelectedAddress
	) => {
		setPaymentSelected({
			name: paymentSelectedName,
			address: paymentSelectedAddress,
		})
	}

	return (
		<div>
			<Head>
				<title>Bitpayer - Bitcoin hecho fácil.</title>
				<meta name='description' content='Generated by create next app' />
				<link rel='icon' href='/favicon.ico' />
				<link
					rel='stylesheet'
					type='text/css'
					href='https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css'
				/>
				<link
					href='https://fonts.googleapis.com/css?family=Poppins|Lakki+Reddy|Rancho&display=swap'
					rel='stylesheet'
				/>

				<link rel='preconnect' href='https://fonts.googleapis.com' />
				<link rel='preconnect' href='https://fonts.gstatic.com' crossorigin />
			</Head>

			<Header />
			<main>
				<div className='padding20'></div>
				<div className='padding20'></div>

				<div className='padding20'>
					<h2 className='font2em text-center'>
						¡Tu pago por
						{payment && (
							<span className='color-green'>
								${payment.pricing.local.amount}
								{payment.pricing.local.currency}
							</span>
						)}
						ha sido creado!
					</h2>
				</div>

				<div className='padding20'>
					<p className='font1-3em text-center padding5'>
						Dale click en el botón "ver pago" para mostrarle <br /> el código QR
						a tu cliente y pague al instante.
					</p>

					<p className='font1-3em text-center padding5'>
						También puedes darle click al botón copiar para mandarle a tu
						cliente <br /> la liga de pago por la compra de tu
						producto/servicio.
					</p>
				</div>

				<section className='my-container'>
					<article className='padding20'>
						<h1 className='text-center color-darkblue'>Pagar con: </h1>

						<div className='flex flex-wrap flex-center'>
							{payment &&
								Object.keys(payment.addresses).map(function (key) {
									return (
										<div className='margin10'>
											<button
												className='my-btn flex flex-middle flex-center color-white back-darkblue text-capitalize'
												onClick={() =>
													handlePaymentSelected(key, payment.addresses[key])
												}
											>
                                                <span className='margin-right5'>{key}</span>
                                                {key == 'ethereum' && <Icon.Eth color="white" size={22}/>}

                                                {key == 'bitcoin' && <Icon.Btc color="white" size={22}/>}

                                                {key == 'litecoin' && <Icon.Ltc color="white" size={22}/>}

                                                {key == 'dogecoin' && <Icon.Doge color="white" size={22}/>}

                                                {key == 'dai' && <Icon.Eth color="white" size={22}/>}

                                                {key == 'usdc' && <Icon.Eth color="white" size={22}/>}
                                                {/* {key == 'bitcoincash' && <Icon.Bcsh color="white" size={22}/>} */}

											</button>
										</div>
									)
								})}
						</div>

						<div>
							{paymentSelected && (
								<div className='back-white padding10 text-center font1-5em'>
									<div>
										Pagar{' '}
										{payment && (
											<span className='color-green'>
												${payment.pricing.local.amount}
												{payment.pricing.local.currency}
											</span>
										)}
										<br />
										{' con: '}
										<span className='color-yellow'>
											{' '}
											{paymentSelected.name}
										</span>
									</div>

									<div className='padding20'>
										<QRCode value={paymentSelected.address} size="200"/>
									</div>

									<div>
										<p className='font1em'>
											Dirección: {paymentSelected.address}
										</p>
										<div>
											<button className='my-btn color-white back-darkblue text-capitalize'>
												Copiar Dirección
											</button>
										</div>
									</div>
								</div>
							)}
						</div>

						<div>
							<br />
							<br />
							<h2 className='text-center'>
								Tambien puedes ver el pago original en coinbase
							</h2>

							<div className='margin10 text-center padding20'>
								{payment && (
									<a
										href={payment.hosted_url}
										target='_blank'
										className='my-btn color-green'
									>
										Ver Pago en Coibase
									</a>
								)}
							</div>
						</div>
					</article>
				</section>
			</main>
		</div>
	)
}
